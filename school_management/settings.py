"""
Django settings for school_management project.

Generated by 'django-admin startproject' using Django 5.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-p7t$e&$fatak@qc@2af48j@kce#(n&5bqu2sw%*d1%m@32=98x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        '': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'rest_framework',
    # 'rest_framework.authtoken',
    # 'knox',
    'users',
    'courses',
    'enrollments',
    
]


# REST_FRAMEWORK = {
#     # 'DEFAULT_AUTHENTICATION_CLASSES': [
#     #     'rest_framework.authentication.TokenAuthentication',
#     #     # Add other authentication classes if needed
#     # ],
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         'rest_framework.authentication.BasicAuthentication',
#         'rest_framework.authentication.SessionAuthentication',
#         # 'knox.auth.TokenAuthentication'
#     ]
#     # Add other DRF settings as needed
# }
REST_FRAMEWORK = {
    # 'DEFAULT_AUTHENTICATION_CLASSES': [
    #     'rest_framework.authentication.BasicAuthentication',
    #     'rest_framework.authentication.SessionAuthentication',
    #     'rest_framework.authentication.TokenAuthentication',  # Add TokenAuthentication here
    # ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    # Add other DRF settings as needed
}

# REST_FRAMEWORK = {
#     'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
#     'PAGE_SIZE': 10,  # Number of items per page
#     # Add other DRF settings as needed
# }
# from users.user_middleware import SetAuthUserModelMiddleware

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'users.user_middleware.SetAuthUserModelMiddleware',
    'authentication.middleware.AdminAuthenticationMiddleware',
]

AUTHENTICATION_BACKENDS = [
    'users.backends.custom_auth_backend.CustomAuthenticationBackend',
    'django.contrib.auth.backends.ModelBackend',
    # Add any other authentication backends as needed


    'authentication.backends.CustomUserModelBackend',
    'django.contrib.auth.backends.ModelBackend',
]



# REST_FRAMEWORK = {
#     # Use Django's standard `django.contrib.auth` permissions,
#     # or allow read-only access for unauthenticated users.
#     # 'DEFAULT_PERMISSION_CLASSES': [
#     #     'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
#     # ]

# }

# Define the base directory of your project
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# # Add the 'media' folder to store uploaded files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'pppopppo33@gmail.com'
# EMAIL_HOST_PASSWORD = 'namjon@0901BTS'
# DEFAULT_FROM_EMAIL = 'pppopppo33@gmail.com'
# ADMIN_EMAIL = 'pppopppo33@gmail.com'
EMAIL_HOST = 'sandbox.smtp.mailtrap.io'
EMAIL_HOST_USER = '71c46d059d49bc'
EMAIL_HOST_PASSWORD = 'fe99f421ad0b84'
EMAIL_PORT = '2525'
ADMIN_EMAIL = '09doniaahmed01@gmail.com'  # Replace 'admin@example.com' with your actual admin email address




AUTH_USER_MODEL = 'users.User'
# AUTH_USER_MODEL = 'auth.User'  # Keep the built-in user model for admin purposes

# LOGIN_URL = '/login/'
MEDIA_URL = '/media/'


import os
os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = 'c/client_secret_432940895676-dqgqglajc8tenuo5eqnbjd16fkgokvm0.apps.googleusercontent.com.json'

# Define JSON_KEY_FILE_PATH using the environment variable
JSON_KEY_FILE_PATH = os.environ['GOOGLE_APPLICATION_CREDENTIALS']
ROOT_URLCONF = 'school_management.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'users.context_processors.set_auth_user_model',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'school_management.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'


STATIC_ROOT = os.path.join(BASE_DIR, 'static')

STATICFILES_DIRS = [os.path.join(BASE_DIR, 'school_management/static')]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
